"Filed out from Dolphin Smalltalk 7"!

Debugger subclass: #SSWDebugger
	instanceVariableNames: 'debugState'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SSWDebugger guid: (GUID fromString: '{9f0c6cc1-3da8-11d6-87e5-0010a70883e2}')!
SSWDebugger comment: ''!
!SSWDebugger categoriesForClass!Unclassified! !
!SSWDebugger methodsFor!

breakFrameOrMethod: aStackFrame

	self makeDebugFrame: aStackFrame.

	self breakWhen: [ :iFrame | (iFrame index <= aStackFrame index) or: [iFrame method = aStackFrame method]]!

createSchematicWiring

	super createSchematicWiring.

	self methodSpyManager 
		when: #methodSpiesCompiledIn: send: #onMethodSpiesCompiledIn: to: self!

debuggerToolbar

	^(self view viewNamed: 'debuggerTools' ifNone: [nil]) ifNotNil: [ :refView | refView presenterConnectionPoint]!

methodSpyManager

	^SSWMethodSpyManager current!

onMethodSpiesCompiledIn: aCompiledMethod

	"Check for a relevant change in spies and restart if necessary"

	self selectedMethod ifNotNil: 
		[ :method |
		"Only restart if the current method is affected"
		(method methodClass = aCompiledMethod methodClass and: [method selector = aCompiledMethod selector]) ifTrue: [self restartMethod]]!

onViewClosed

	"Unattach from the spy manager"

	self methodSpyManager removeEventsTriggeredFor: self.

	^super onViewClosed 
!

onViewOpened

	super onViewOpened.

	self debuggerToolbar ifNotNil: 
		[ :toolbar |
		toolbar addItem: 
			(ToolbarIconButton new
				commandDescription: 
					(CommandDescription new
						command: #stepThrough;
						description: 'Step into Block';
						image: (self class stepThroughIconWithExtent: toolbar actualBitmapSize);
						yourself);
				yourself) after: (toolbar itemWithCommand: #stepOver)]!

queryCommand: aCommandQuery

	| stepOver |

	(super queryCommand: aCommandQuery) ifTrue: [^true].

	(aCommandQuery commandSymbol == #stepThrough) ifTrue: 
		["Same rules as #stepOver"
		stepOver := CommandQuery commandDescription: (CommandDescription command: #stepOver) source: aCommandQuery source.
		self queryFrameCommand: stepOver.
		aCommandQuery isEnabled: stepOver isEnabled.
		^true].

	^false!

stepThrough

	| frame |

	self beRunning.
	self debugState: 'Step through'.
	frame := self frame.
	
	frame isBlockFrame
		ifTrue: [self breakFrameOrMethod: (self frames detect: [ :each | each ~~ frame and: [each method = frame method]])]
		ifFalse: [self breakFrameOrMethod: frame].

	self makeDebugFrame: frame sender.
	self resume! !
!SSWDebugger categoriesFor: #breakFrameOrMethod:!commands!private! !
!SSWDebugger categoriesFor: #createSchematicWiring!initializing!public! !
!SSWDebugger categoriesFor: #debuggerToolbar!accessing!private! !
!SSWDebugger categoriesFor: #methodSpyManager!accessing!public! !
!SSWDebugger categoriesFor: #onMethodSpiesCompiledIn:!event handling!public! !
!SSWDebugger categoriesFor: #onViewClosed!event handling!public! !
!SSWDebugger categoriesFor: #onViewOpened!event handling!public! !
!SSWDebugger categoriesFor: #queryCommand:!commands!private! !
!SSWDebugger categoriesFor: #stepThrough!commands!private! !

!SSWDebugger class methodsFor!

stepThroughIcon16
	^InternalIcon fromBytes: #[137 80 78 71 13 10 26 10 0 0 0 13 73 72 68 82 0 0 0 16 0 0 0 16 8 6 0 0 0 31 243 255 97 0 0 0 1 115 82 71 66 0 174 206 28 233 0 0 0 4 103 65 77 65 0 0 177 143 11 252 97 5 0 0 0 9 112 72 89 115 0 0 14 195 0 0 14 195 1 199 111 168 100 0 0 0 222 73 68 65 84 56 79 165 144 65 10 130 64 20 134 61 72 139 34 116 84 40 145 108 236 4 222 167 131 116 0 109 87 208 162 130 106 211 190 77 139 232 2 65 103 105 242 151 247 130 116 156 73 250 224 231 241 222 251 231 119 28 231 111 196 62 86 222 49 50 235 16 41 178 55 241 55 19 213 191 185 47 147 16 66 246 38 254 42 121 134 69 122 213 42 79 31 214 0 19 8 25 220 189 234 55 104 212 141 46 1 89 41 152 88 232 117 1 90 31 224 133 71 170 104 185 1 123 90 3 112 112 43 214 137 8 150 211 19 2 196 46 86 232 49 199 190 196 18 144 203 57 190 138 195 44 244 152 99 95 98 14 0 184 254 240 18 86 135 81 209 211 10 216 3 252 66 206 248 13 80 209 211 10 216 3 64 144 203 133 123 30 43 84 26 49 191 5 140 10 217 195 195 161 210 136 49 6 124 133 104 96 143 54 128 245 89 212 168 249 156 236 13 37 4 170 142 192 48 252 48 0 0 0 0 73 69 78 68 174 66 96 130]!

stepThroughIcon20
	^InternalIcon fromBytes: #[137 80 78 71 13 10 26 10 0 0 0 13 73 72 68 82 0 0 0 20 0 0 0 20 8 6 0 0 0 141 137 29 13 0 0 0 1 115 82 71 66 0 174 206 28 233 0 0 0 4 103 65 77 65 0 0 177 143 11 252 97 5 0 0 0 9 112 72 89 115 0 0 14 195 0 0 14 195 1 199 111 168 100 0 0 1 98 73 68 65 84 56 79 205 147 65 74 195 64 20 134 131 110 5 175 208 90 58 153 201 66 173 147 73 4 175 161 11 207 224 206 11 120 1 87 186 50 52 105 67 139 104 40 244 6 10 46 173 91 47 32 226 66 112 85 84 72 117 226 188 56 41 73 152 161 163 110 252 224 135 228 205 123 95 222 34 99 253 127 72 224 167 36 244 50 136 19 248 218 228 231 103 62 151 99 122 80 178 153 54 38 237 172 113 219 230 139 2 98 57 166 7 190 90 223 166 30 216 206 88 104 2 14 217 172 121 135 114 185 44 253 13 16 253 70 8 205 229 28 136 228 104 132 112 94 159 169 0 133 203 239 199 42 6 27 194 156 82 56 223 170 140 129 176 216 182 66 69 72 66 246 132 207 233 190 117 100 45 149 133 206 181 179 130 99 122 136 187 222 131 108 5 148 194 169 200 92 104 135 238 41 142 220 25 26 117 250 226 183 249 4 33 233 178 15 52 94 191 199 17 155 146 200 61 150 173 192 98 33 32 6 95 208 120 131 131 172 136 125 209 121 19 226 71 217 82 96 38 68 67 186 3 91 181 110 72 46 107 93 57 92 188 191 219 49 115 101 75 129 153 16 192 3 58 34 177 155 53 39 40 195 61 150 226 190 123 34 143 202 152 11 173 100 111 89 136 94 241 144 114 18 121 207 178 90 231 7 66 129 61 160 187 78 224 113 220 219 218 150 165 58 74 33 20 148 66 96 45 161 171 242 81 133 86 168 188 41 6 104 111 74 57 218 109 37 197 86 165 88 214 23 78 104 230 26 121 43 45 143 0 0 0 0 73 69 78 68 174 66 96 130]!

stepThroughIcon24
	^InternalIcon fromBytes: #[137 80 78 71 13 10 26 10 0 0 0 13 73 72 68 82 0 0 0 24 0 0 0 24 8 6 0 0 0 224 119 61 248 0 0 0 1 115 82 71 66 0 174 206 28 233 0 0 0 4 103 65 77 65 0 0 177 143 11 252 97 5 0 0 0 9 112 72 89 115 0 0 14 195 0 0 14 195 1 199 111 168 100 0 0 1 125 73 68 65 84 72 75 237 148 79 74 195 64 20 198 235 29 60 64 74 108 102 140 46 146 76 169 222 194 19 120 1 189 134 59 111 32 93 132 36 180 181 75 193 149 224 74 193 63 23 80 23 238 11 238 132 10 149 166 157 47 190 169 49 73 211 153 34 174 252 193 7 47 239 189 188 111 94 72 210 248 103 37 238 217 222 148 245 131 212 84 110 183 243 76 35 234 225 61 49 179 30 90 169 169 88 79 188 208 136 122 88 223 255 168 26 176 74 250 6 131 96 42 53 211 149 245 216 202 196 122 193 132 70 252 30 153 129 218 32 209 220 192 132 191 53 136 215 51 152 21 116 44 181 96 197 6 232 45 222 95 2 201 211 175 176 140 193 35 194 140 165 6 139 83 59 145 255 196 186 226 220 185 16 155 184 174 50 64 45 235 145 189 184 38 212 54 37 126 26 116 189 35 30 137 49 15 219 163 237 164 125 152 255 102 120 44 94 145 67 13 61 232 165 219 128 158 1 96 145 127 195 134 94 202 134 126 106 95 238 78 148 1 98 228 178 154 236 161 118 133 190 193 86 184 99 203 199 241 214 188 101 217 224 188 144 67 13 61 212 174 208 55 0 60 9 78 156 129 247 105 221 59 223 6 50 70 14 53 106 203 99 102 0 120 220 30 217 215 238 194 0 49 114 84 46 98 110 224 36 226 64 158 118 108 221 201 45 164 16 35 71 229 34 230 6 128 135 226 74 190 170 41 132 152 210 85 172 105 16 7 251 44 18 239 16 98 74 87 177 158 129 172 110 56 81 167 9 33 166 108 21 181 6 75 127 21 6 212 254 42 242 90 190 77 25 117 234 156 26 141 57 50 221 88 57 180 3 209 250 0 0 0 0 73 69 78 68 174 66 96 130]!

stepThroughIcon32
	^InternalIcon fromBytes: #[137 80 78 71 13 10 26 10 0 0 0 13 73 72 68 82 0 0 0 32 0 0 0 32 8 6 0 0 0 115 122 122 244 0 0 0 1 115 82 71 66 0 174 206 28 233 0 0 0 4 103 65 77 65 0 0 177 143 11 252 97 5 0 0 0 9 112 72 89 115 0 0 14 195 0 0 14 195 1 199 111 168 100 0 0 1 119 73 68 65 84 88 71 237 148 191 78 195 48 16 135 35 30 3 149 129 63 13 180 77 68 151 10 84 71 226 45 120 7 70 158 128 39 104 40 48 51 84 93 16 27 27 3 18 19 12 192 83 240 14 168 18 3 198 63 115 9 141 185 54 113 109 42 85 202 39 157 234 250 206 119 159 173 170 65 77 13 136 210 228 51 62 79 164 91 136 9 181 179 7 13 54 223 194 197 227 101 87 75 80 59 123 22 22 120 13 191 178 181 163 128 152 252 60 163 101 12 127 197 241 157 218 45 15 12 173 5 254 75 0 205 184 40 80 65 192 60 159 69 41 220 33 68 129 101 8 204 165 130 128 137 155 192 250 201 246 134 94 156 5 107 248 96 5 40 151 215 22 113 19 136 174 250 178 53 234 201 206 101 255 161 121 211 221 55 5 176 135 28 106 80 75 199 166 113 19 136 211 228 180 173 154 183 198 61 217 190 62 144 209 80 124 100 2 88 99 79 231 84 13 106 233 216 52 110 2 64 253 107 190 111 61 237 229 55 55 3 57 212 80 185 137 187 64 148 138 99 220 146 27 142 64 14 53 84 110 226 46 0 212 243 62 239 60 118 254 12 199 30 114 84 198 225 73 96 32 14 49 200 20 192 30 114 84 198 225 71 0 168 97 183 205 251 56 31 142 53 246 40 61 11 143 2 23 71 13 252 216 242 219 171 53 246 40 61 11 127 2 32 78 197 32 188 235 74 4 214 180 61 15 207 2 120 5 245 236 58 202 111 15 252 10 0 45 81 109 56 240 47 96 73 45 176 122 2 102 216 194 245 64 148 194 29 66 216 194 245 64 16 65 240 13 94 145 213 129 118 177 91 197 0 0 0 0 73 69 78 68 174 66 96 130]!

stepThroughIcon40
	^InternalIcon fromBytes: #[137 80 78 71 13 10 26 10 0 0 0 13 73 72 68 82 0 0 0 40 0 0 0 40 8 6 0 0 0 140 254 184 109 0 0 0 1 115 82 71 66 0 174 206 28 233 0 0 0 4 103 65 77 65 0 0 177 143 11 252 97 5 0 0 0 9 112 72 89 115 0 0 14 195 0 0 14 195 1 199 111 168 100 0 0 2 176 73 68 65 84 88 71 237 149 207 107 211 96 24 199 51 127 223 6 130 7 15 218 54 109 210 244 77 234 166 173 109 218 84 246 23 120 244 40 30 20 60 136 7 255 2 111 34 130 45 93 89 109 45 8 219 148 178 30 118 84 20 68 240 199 182 110 99 7 143 94 132 29 60 236 162 212 217 178 181 166 190 239 120 83 178 248 54 201 67 130 78 233 7 30 146 247 125 243 125 190 223 62 9 148 27 49 98 196 255 130 82 208 182 227 133 92 223 207 82 242 185 31 180 189 119 72 195 224 146 176 27 92 19 250 126 84 104 89 236 145 158 180 189 119 72 179 208 251 104 59 184 42 232 126 149 239 1 249 15 150 128 100 26 230 171 113 63 108 127 85 248 57 88 227 242 57 160 214 33 13 189 86 120 93 26 132 38 107 218 254 96 64 2 153 167 58 10 8 229 79 7 36 205 135 21 19 96 64 107 79 115 185 130 37 52 138 201 223 12 232 10 96 64 43 96 63 176 224 160 5 28 163 215 1 7 42 160 146 215 190 162 162 250 54 81 77 28 157 122 51 117 132 236 57 5 140 231 115 119 148 98 246 19 93 90 177 245 99 97 43 136 61 72 223 195 102 29 185 168 237 18 99 178 55 44 32 57 199 255 84 155 248 71 61 198 207 175 145 61 6 182 126 44 108 5 129 107 129 19 74 81 251 44 46 78 180 163 207 46 116 229 178 218 145 75 217 111 56 216 32 32 42 103 182 113 184 165 120 94 123 24 104 10 31 241 122 83 202 171 55 104 11 43 182 126 44 28 5 252 253 115 57 60 145 118 104 57 218 11 173 139 123 193 140 171 249 62 180 34 234 210 124 114 11 21 210 11 84 202 194 209 207 138 179 224 46 119 8 77 171 115 177 217 100 43 216 20 247 66 253 86 77 65 15 191 66 109 60 237 22 95 229 199 169 146 133 179 159 5 87 130 179 121 233 52 126 181 91 225 151 202 14 51 224 138 216 83 202 234 247 216 163 212 117 42 25 134 43 63 51 238 4 125 110 12 205 168 183 201 55 72 2 89 95 113 244 105 114 71 174 166 95 68 158 71 142 83 197 48 220 249 153 112 45 64 13 116 76 158 81 55 196 197 201 125 211 11 191 70 186 82 202 180 162 245 137 32 125 212 14 215 126 6 32 1 170 169 39 229 233 108 151 127 39 13 2 42 165 172 142 106 169 155 244 17 39 64 126 4 176 0 85 212 34 170 164 123 36 92 108 246 162 46 61 73 109 144 233 210 99 39 192 126 96 129 92 79 158 193 223 226 23 169 158 32 147 107 203 53 245 50 61 114 3 216 15 44 32 211 66 149 212 45 185 148 233 74 115 137 249 200 194 228 41 122 228 6 176 31 88 64 224 27 137 113 177 126 254 106 172 156 189 196 53 174 28 166 219 110 0 251 129 5 30 1 251 129 5 30 1 251 129 5 30 1 251 129 5 30 1 251 129 5 30 1 251 153 5 214 242 3 86 95 163 92 193 18 26 229 7 172 190 70 253 43 112 220 47 104 6 187 133 237 35 4 49 0 0 0 0 73 69 78 68 174 66 96 130]!

stepThroughIcon48
	^InternalIcon fromBytes: #[137 80 78 71 13 10 26 10 0 0 0 13 73 72 68 82 0 0 0 48 0 0 0 48 8 6 0 0 0 87 2 249 135 0 0 0 1 115 82 71 66 0 174 206 28 233 0 0 0 4 103 65 77 65 0 0 177 143 11 252 97 5 0 0 0 9 112 72 89 115 0 0 14 195 0 0 14 195 1 199 111 168 100 0 0 3 9 73 68 65 84 104 67 237 152 77 139 211 64 24 199 235 77 208 139 87 17 214 93 182 109 154 73 220 213 190 152 151 21 241 224 213 163 23 63 130 126 5 15 158 149 221 182 105 237 139 173 136 40 190 128 136 178 30 244 178 136 136 162 94 189 8 138 39 193 139 224 190 176 178 221 166 206 147 157 46 105 156 76 38 211 169 186 144 31 60 116 50 201 252 255 207 51 51 153 64 83 9 9 9 9 9 9 67 180 178 221 211 151 22 6 147 12 240 32 118 242 1 131 163 239 210 238 36 3 60 136 157 124 64 124 250 67 198 43 194 255 203 106 179 238 209 218 19 45 0 213 204 117 191 25 79 98 172 123 184 221 223 109 191 79 123 191 19 45 0 239 207 239 96 32 43 80 197 250 129 154 166 151 252 48 160 159 216 237 13 32 225 191 182 2 147 0 18 222 243 43 0 239 197 48 246 100 1 222 22 34 47 247 191 42 0 76 89 17 74 204 21 8 234 6 67 24 154 152 63 66 137 185 2 65 221 96 8 35 44 18 179 0 26 194 222 126 132 69 146 2 198 240 246 195 20 209 23 23 126 226 175 238 93 114 57 2 36 12 201 15 131 86 0 30 223 209 23 237 53 114 25 132 233 205 11 83 68 47 219 21 92 192 182 190 100 109 162 170 213 34 221 30 172 21 80 29 235 156 94 177 190 161 170 189 133 106 198 27 210 29 132 233 205 75 164 136 86 181 191 102 30 207 187 202 173 66 79 47 91 155 90 213 188 1 253 180 2 80 195 158 211 234 230 91 28 191 210 79 231 92 40 126 106 101 106 191 39 244 39 145 222 60 68 138 160 186 89 132 68 32 209 153 151 10 46 164 184 165 57 230 170 218 57 57 178 133 80 195 88 83 155 198 70 246 225 137 157 235 150 49 200 117 74 215 136 12 141 72 111 30 184 68 112 194 207 149 123 121 111 198 253 179 30 214 158 125 129 92 228 152 235 88 117 31 145 160 193 229 29 5 151 200 177 171 103 15 32 199 218 152 93 65 92 5 104 53 107 160 118 138 23 200 240 48 184 188 163 224 22 81 91 198 37 205 177 118 183 76 88 100 31 29 119 213 134 241 153 12 99 193 237 205 130 91 196 91 133 150 241 81 121 144 15 93 129 233 87 138 139 234 198 54 106 150 206 144 97 44 184 189 89 196 18 201 181 75 167 52 199 238 67 162 180 2 148 251 121 124 18 133 30 155 65 98 121 135 17 91 68 109 27 203 40 112 2 121 69 192 236 87 173 158 222 46 29 33 143 70 17 219 155 70 108 145 172 99 29 86 219 165 213 204 147 249 145 21 64 109 99 128 143 209 58 121 140 135 216 222 52 132 68 114 55 139 87 180 186 53 152 121 173 120 5 192 233 4 255 124 192 123 66 30 225 65 200 59 136 144 136 90 59 125 16 127 153 63 169 221 157 173 4 167 147 218 44 93 36 183 121 17 242 14 34 44 146 235 26 231 113 1 253 220 157 130 139 174 155 95 98 206 62 32 236 237 71 88 4 18 86 110 23 158 225 217 239 107 53 35 234 163 69 67 216 219 207 88 34 250 178 126 72 237 22 47 11 204 62 48 150 247 16 41 34 130 72 241 150 34 34 136 20 111 41 34 130 72 241 150 34 34 136 20 111 41 34 130 72 241 150 34 34 136 20 111 191 8 45 100 65 211 246 135 48 52 49 127 200 130 166 237 143 132 255 140 84 234 55 214 213 93 135 179 68 247 30 0 0 0 0 73 69 78 68 174 66 96 130]!

stepThroughIcon64
	^InternalIcon fromBytes: #[137 80 78 71 13 10 26 10 0 0 0 13 73 72 68 82 0 0 0 64 0 0 0 64 8 6 0 0 0 170 105 113 222 0 0 0 1 115 82 71 66 0 174 206 28 233 0 0 0 4 103 65 77 65 0 0 177 143 11 252 97 5 0 0 0 9 112 72 89 115 0 0 14 195 0 0 14 195 1 199 111 168 100 0 0 3 2 73 68 65 84 120 94 237 152 203 107 19 65 28 199 227 81 143 222 10 57 248 168 201 102 119 22 211 144 199 62 2 158 196 255 67 255 1 61 43 120 21 68 155 154 52 181 198 22 105 133 218 138 162 23 233 69 139 72 123 234 185 87 5 161 7 111 62 176 52 77 92 119 150 9 196 237 236 99 126 51 59 173 101 62 240 189 204 62 190 223 249 38 157 95 219 156 66 161 80 40 20 10 133 66 113 24 52 237 14 204 233 166 39 83 168 229 254 34 246 71 15 14 116 126 187 32 85 216 147 216 31 61 170 0 85 64 230 5 12 194 107 199 172 0 119 15 7 202 74 104 198 253 115 172 11 200 26 188 89 85 128 42 64 21 160 10 80 5 168 2 254 175 2 112 192 52 74 132 163 128 176 87 148 50 129 102 68 83 34 170 128 19 82 0 24 142 2 162 16 150 45 14 97 38 39 190 128 252 150 126 22 181 221 239 168 227 220 39 75 255 144 182 0 115 230 74 222 152 179 223 153 45 231 39 89 138 34 117 54 30 152 76 180 165 234 71 163 103 13 113 17 70 199 190 67 150 3 146 10 48 31 184 22 106 59 59 126 129 251 165 133 250 65 248 121 10 76 217 160 48 153 76 108 79 156 241 131 15 46 110 232 94 113 109 170 31 20 209 118 110 227 107 81 5 152 15 155 183 80 203 249 102 204 55 126 76 110 24 30 150 49 235 124 14 94 24 15 83 54 40 204 38 133 55 229 187 250 66 35 216 224 133 77 205 43 190 168 236 235 93 251 107 233 105 253 32 92 0 106 185 253 226 74 101 23 223 55 90 211 123 141 223 122 199 109 146 215 197 193 156 13 2 187 137 151 59 53 250 52 199 55 155 70 151 214 77 207 232 218 159 200 155 146 96 207 6 0 100 82 90 45 223 24 125 11 88 132 218 246 30 62 4 201 107 146 0 101 99 5 108 162 61 175 238 20 222 150 169 27 165 73 91 171 12 141 121 235 30 121 60 13 224 108 44 128 77 10 175 202 53 52 235 28 250 63 32 77 248 12 64 143 236 164 177 23 6 156 141 5 46 19 109 165 186 238 127 178 212 77 143 11 31 144 198 147 218 53 242 88 90 184 178 165 133 203 36 191 149 63 141 199 226 248 41 31 22 195 216 11 195 149 45 45 220 38 218 82 109 57 238 91 96 116 156 254 229 185 198 57 114 59 11 220 217 210 192 111 18 51 22 241 33 233 207 253 215 228 78 86 248 179 165 64 136 73 113 181 122 61 60 22 131 131 207 31 123 228 22 8 66 178 37 33 204 68 95 172 127 193 191 232 140 10 40 45 215 134 218 66 253 38 185 12 65 88 182 56 132 153 20 95 78 85 71 99 49 56 248 186 214 46 185 4 69 88 182 56 132 154 148 158 213 55 241 207 61 30 123 168 215 184 74 150 161 8 205 22 133 80 19 189 103 77 26 143 45 255 207 221 218 123 178 196 131 208 108 81 8 55 65 29 251 3 112 236 133 17 158 141 134 20 19 32 82 178 73 49 1 34 37 155 20 19 32 82 178 73 49 1 34 37 155 20 19 32 82 178 73 49 1 34 37 155 20 19 32 82 178 73 49 1 34 37 155 20 19 32 82 178 73 49 1 34 37 91 216 36 74 89 66 243 163 41 19 104 70 52 101 9 205 143 166 76 160 25 209 148 37 52 63 154 20 10 133 66 17 77 46 247 23 31 39 213 118 202 238 113 21 0 0 0 0 73 69 78 68 174 66 96 130]!

stepThroughIconWithExtent: aPoint

	aPoint = (16@16) ifTrue: [^self stepThroughIcon16].
	aPoint = (20@20) ifTrue: [^self stepThroughIcon20].
	aPoint = (24@24) ifTrue: [^self stepThroughIcon24].
	aPoint = (32@32) ifTrue: [^self stepThroughIcon32].
	aPoint = (40@40) ifTrue: [^self stepThroughIcon40].
	aPoint = (48@48) ifTrue: [^self stepThroughIcon48].

	^self stepThroughIcon64! !
!SSWDebugger class categoriesFor: #stepThroughIcon16!constants!private! !
!SSWDebugger class categoriesFor: #stepThroughIcon20!constants!private! !
!SSWDebugger class categoriesFor: #stepThroughIcon24!constants!private! !
!SSWDebugger class categoriesFor: #stepThroughIcon32!constants!private! !
!SSWDebugger class categoriesFor: #stepThroughIcon40!constants!private! !
!SSWDebugger class categoriesFor: #stepThroughIcon48!constants!private! !
!SSWDebugger class categoriesFor: #stepThroughIcon64!constants!private! !
!SSWDebugger class categoriesFor: #stepThroughIconWithExtent:!constants!public! !

